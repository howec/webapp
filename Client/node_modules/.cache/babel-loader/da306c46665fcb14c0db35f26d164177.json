{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport LoginLanding from './pages/landing/LoginLanding';\nimport PartnersLanding from './pages/partners/PartnersLanding';\nimport StaffLanding from './pages/staff/StaffLanding';\nimport StudentsLanding from './pages/students/StudentsLanding';\nimport socket from './components/SocketUser';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setURL = d => {\n      // this.setState({url: d});\n      let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n      this.setState({\n        url: urlStuff\n      });\n    };\n\n    this.setData = d => {\n      this.setState({\n        data: d\n      });\n    };\n\n    this.setGroupApp = g => {\n      this.setState({\n        group: g\n      });\n    };\n\n    this.onSignIn = googleUser => {\n      //should I be configuring a \"group?\"\n      //!!!!!TODO: need to make a function to get the url stuff, input from staff\n      let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n      this.setState({\n        url: urlStuff\n      });\n      console.log(\"SignedIn\");\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in! \" + this.state.loggedIn);\n      console.log(\"URL: \" + this.state.url); //!!!!!TODO: some function to tell you what group the person belongs in\n\n      this.setState({\n        group: \"Staff\"\n      });\n      console.log(\"new group is: \" + this.state.group);\n      console.log(\"signed in! \" + this.state.loggedIn);\n      this.setState({\n        profile: googleUser.getBasicProfile()\n      });\n      console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + this.state.profile.getName());\n      console.log('Given Name: ' + this.state.profile.getGivenName());\n      console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      console.log(\"Entered console.... \" + this.state.loggedIn); //HOWE: this should actually be the authentication stuff\n      //login emission here... this is BEFORE any authentication\n\n      socket.emit(\"gLoginSubmitted\", {\n        email: this.state.profile.getEmail()\n      });\n      socket.on(\"sendingattempt\", data => {\n        console.log(\"IN SENDING ATTEMPT\");\n        console.log(data);\n        this.setState({\n          data: data[\"attempt\"]\n        });\n        console.log(\"From within the set state.... \" + JSON.stringify(this.state.data));\n      }); //function to get the corresponding row entry from the appropriate sheet\n    };\n\n    this.onSignOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        loggedIn: false,\n        group: null,\n        url: null\n      });\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n      socket.emit('loggedout', {});\n    };\n\n    console.log(\"in app constructor\");\n    /* \n    group values: null, Students, Staff, Partners\n    */\n\n    this.state = {\n      url: null,\n      loggedIn: false,\n      group: null,\n      profile: null,\n      data: null\n    };\n    socket.emit('FINALLY', {\n      msg: \"event from App.js\"\n    });\n  }\n\n  /*\n    failsafe way: store the pages as things in divs, and render everything but selectively hide\n  */\n  render() {\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(LoginLanding, {\n      setURL: this.setURL,\n      setData: this.setData,\n      setGroupApp: this.setGroupApp,\n      url: [\"Applica\", \"\"],\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(StaffLanding, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(StudentsLanding, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }), React.createElement(PartnersLanding, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/App.js"],"names":["React","Component","LoginLanding","PartnersLanding","StaffLanding","StudentsLanding","socket","App","constructor","props","setURL","d","urlStuff","setState","url","setData","data","setGroupApp","g","group","onSignIn","googleUser","console","log","loggedIn","state","profile","getBasicProfile","getId","getName","getGivenName","getEmail","emit","email","on","JSON","stringify","onSignOut","auth2","window","gapi","getAuthInstance","signOut","then","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport LoginLanding from './pages/landing/LoginLanding'\nimport PartnersLanding from './pages/partners/PartnersLanding'\nimport StaffLanding from './pages/staff/StaffLanding';\nimport StudentsLanding from './pages/students/StudentsLanding';\n\nimport socket from './components/SocketUser';\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    console.log(\"in app constructor\");\n\n    /* \n    group values: null, Students, Staff, Partners\n    */\n    this.state = {url: null, loggedIn: false, group: null, profile: null, data: null};\n\n    socket.emit('FINALLY', {msg: \"event from App.js\"});\n  }\n\n  setURL = (d) => {\n    // this.setState({url: d});\n\n    let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n    this.setState({url: urlStuff});    \n  }\n\n  setData = (d) =>{\n    this.setState({data: d});\n  }\n\n  setGroupApp = (g) =>{\n    this.setState({group: g});\n  }\n\n\n  onSignIn = (googleUser) => {\n    //should I be configuring a \"group?\"\n\n\n    //!!!!!TODO: need to make a function to get the url stuff, input from staff\n    let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n    this.setState({url: urlStuff});\n\n    console.log(\"SignedIn\");\n    this.setState({loggedIn: true});\n    console.log(\"signed in! \" + this.state.loggedIn);\n            console.log(\"URL: \" + this.state.url);\n\n\n    //!!!!!TODO: some function to tell you what group the person belongs in\n    this.setState({group: \"Staff\"})\n    console.log(\"new group is: \" + this.state.group);\n    console.log(\"signed in! \" + this.state.loggedIn);\n\n\n    this.setState({profile: googleUser.getBasicProfile()});\n\n    console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + this.state.profile.getName());\n    console.log('Given Name: ' + this.state.profile.getGivenName());\n    console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    console.log(\"Entered console.... \"  + this.state.loggedIn);\n\n    //HOWE: this should actually be the authentication stuff\n    //login emission here... this is BEFORE any authentication\n    socket.emit(\"gLoginSubmitted\", {email: this.state.profile.getEmail()});\n\n    socket.on(\"sendingattempt\", (data) =>{\n      console.log(\"IN SENDING ATTEMPT\");\n        console.log(data);\n        this.setState({data: data[\"attempt\"]});\n        console.log(\"From within the set state.... \" + JSON.stringify(this.state.data));\n\n    });\n    //function to get the corresponding row entry from the appropriate sheet\n\n  }\n\n\n  onSignOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({loggedIn: false, group: null, url: null});\n\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n\n    socket.emit('loggedout', {});\n  }\n\n\n/*\n  failsafe way: store the pages as things in divs, and render everything but selectively hide\n*/\n  render(){\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return (\n      <div>\n        <LoginLanding\n          setURL = {this.setURL}\n          setData = {this.setData}\n          setGroupApp = {this.setGroupApp}\n          url = {[\"Applica\", \"\"]}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut} />\n        <StaffLanding\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n        <StudentsLanding\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n        <PartnersLanding\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}