{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport socket from './SocketUser';\nimport GoogleLogin from 'react-google-login';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \" TEST \"), React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" create here \"), React.createElement(GoogleLogin, {\n      clientId: \"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\",\n      buttonText: \"Login\",\n      onSuccess: onSignIn,\n      onFailure: responseGoogle,\n      cookiePolicy: 'single_host_origin',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }));\n  }\n\n}\n\nvar profile; // google user profile\n\nvar userID;\nvar isLoggedIn;\n\nconst responseGoogle = response => {\n  console.log(\"FAILED TO SIGN IN. \" + JSON.stringify(response));\n};\n\nfunction onSignIn(googleUser) {\n  console.log(\"signed in!\");\n  profile = googleUser.getBasicProfile();\n  userID = profile.getId();\n  console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n  console.log('Name: ' + profile.getName());\n  console.log('Given Name: ' + profile.getGivenName());\n  console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n}\n/*\n  // <div></div>\n  // <button id = \"SignOut\" onClick = {signOut}> Sign Out Here </button> \n  function signOut() {\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n  }\n*/\n// onSuccess={(response) => { this.setState({ userLoggedIn: true, }, () => { localStorage.setItem('userLoggedIn', true); });\n// ReactDOM.render(\n//   <GoogleLogin\n//     clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n//     buttonText=\"Login\"\n//     onSuccess={responseGoogle}\n//     onFailure={responseGoogle}\n//     cookiePolicy={'single_host_origin'}\n//   />,\n//   document.getElementById('googleButton')\n// );\n\n\nvar test = document.getElementById(\"test\");\ntest.addEventListener(\"click\", function () {\n  socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n  console.log(\"ENTERED\");\n});\nconsole.log('before the emission');\nsocket.emit('test', {\n  testing: \"0000\"\n});\nsocket.on(\"sendingattempt\", function (data) {\n  console.log(data.attempt);\n});\nexport default Login;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/client/src/components/Login.js"],"names":["React","Component","ReactDOM","Link","socket","GoogleLogin","Login","constructor","props","render","onSignIn","responseGoogle","profile","userID","isLoggedIn","response","console","log","JSON","stringify","googleUser","getBasicProfile","getId","getName","getGivenName","getEmail","test","document","getElementById","addEventListener","emit","testing","on","data","attempt"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;;AAGA,MAAMC,KAAN,SAAoBL,SAApB,CAA8B;AAE5BM,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACD;;AAGDC,EAAAA,MAAM,GAAG;AACP,WAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAFF,EAGE,oBAAC,WAAD;AACE,MAAA,QAAQ,EAAC,0EADX;AAEE,MAAA,UAAU,EAAC,OAFb;AAGE,MAAA,SAAS,EAAEC,QAHb;AAIE,MAAA,SAAS,EAAEC,cAJb;AAKE,MAAA,YAAY,EAAE,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,CAFA;AAcD;;AAtB2B;;AAyB9B,IAAIC,OAAJ,C,CAAiC;;AACjC,IAAIC,MAAJ;AACA,IAAIC,UAAJ;;AAEA,MAAMH,cAAc,GAAII,QAAD,IAAc;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAY,wBAAwBC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAApC;AACD,CAFD;;AAIA,SAASL,QAAT,CAAkBU,UAAlB,EAA8B;AAC5BJ,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AAEAL,EAAAA,OAAO,GAAGQ,UAAU,CAACC,eAAX,EAAV;AACAR,EAAAA,MAAM,GAAGD,OAAO,CAACU,KAAR,EAAT;AAEAN,EAAAA,OAAO,CAACC,GAAR,CAAY,SAASL,OAAO,CAACU,KAAR,EAArB,EAN4B,CAMW;;AACvCN,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAWL,OAAO,CAACW,OAAR,EAAvB;AACAP,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBL,OAAO,CAACY,YAAR,EAA7B;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAYL,OAAO,CAACa,QAAR,EAAxB,EAT4B,CASiB;AAC9C;AAID;;;;;;;;;;AAYA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,IAAIC,IAAI,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AAEAF,IAAI,CAACG,gBAAL,CAAsB,OAAtB,EAA+B,YAAU;AACvCzB,EAAAA,MAAM,CAAC0B,IAAP,CAAY,iBAAZ,EAA+B,MAA/B,EAAuC,KAAvC;AACAd,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,CAHD;AAKAD,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACAb,MAAM,CAAC0B,IAAP,CAAY,MAAZ,EAAoB;AAACC,EAAAA,OAAO,EAAE;AAAV,CAApB;AAEA3B,MAAM,CAAC4B,EAAP,CAAU,gBAAV,EAA4B,UAASC,IAAT,EAAc;AACxCjB,EAAAA,OAAO,CAACC,GAAR,CAAYgB,IAAI,CAACC,OAAjB;AACD,CAFD;AAQA,eAAe5B,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from 'react-router-dom';\nimport socket from './SocketUser';\nimport GoogleLogin from 'react-google-login';\n\n\nclass Login extends Component {\n\n  constructor(props){\n    super(props);\n  }\n\n\n  render() {\n    return (\n\n    <div>\n      <h1> TEST </h1>\n      <h2> create here </h2>\n      <GoogleLogin\n        clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n        buttonText=\"Login\"\n        onSuccess={onSignIn}\n        onFailure={responseGoogle}\n        cookiePolicy={'single_host_origin'}\n      />\n    </div>\n      );\n  }\n}\n\nvar profile;                     // google user profile\nvar userID; \nvar isLoggedIn;\n\nconst responseGoogle = (response) => {\n  console.log(\"FAILED TO SIGN IN. \" + JSON.stringify(response));\n}\n \nfunction onSignIn(googleUser) {\n  console.log(\"signed in!\");\n\n  profile = googleUser.getBasicProfile();\n  userID = profile.getId();\n\n  console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n  console.log('Name: ' + profile.getName());\n  console.log('Given Name: ' + profile.getGivenName());\n  console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n}\n\n\n\n/*\n  // <div></div>\n  // <button id = \"SignOut\" onClick = {signOut}> Sign Out Here </button> \n  function signOut() {\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n  }\n*/\n\n\n// onSuccess={(response) => { this.setState({ userLoggedIn: true, }, () => { localStorage.setItem('userLoggedIn', true); });\n\n// ReactDOM.render(\n//   <GoogleLogin\n//     clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n//     buttonText=\"Login\"\n//     onSuccess={responseGoogle}\n//     onFailure={responseGoogle}\n//     cookiePolicy={'single_host_origin'}\n//   />,\n//   document.getElementById('googleButton')\n// );\n\nvar test = document.getElementById(\"test\");\n\ntest.addEventListener(\"click\", function(){\n  socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n  console.log(\"ENTERED\");\n});\n\nconsole.log('before the emission');\nsocket.emit('test', {testing: \"0000\"});\n\nsocket.on(\"sendingattempt\", function(data){\n  console.log(data.attempt);\n});\n\n\n\n\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}