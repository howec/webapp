{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavigationBar from './components/NavigationBar';\nimport Login from './pages/Login';\nimport Partners from './pages/Partners';\nimport Staff from './pages/Staff';\nimport Students from './pages/Students';\nimport socket from './components/SocketUser'; // import Table from './components/Table'\n//Join is login stuff\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSignIn = (googleUser, pageName) => {\n      console.log(\"SignedIn\");\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in! \" + this.state.loggedIn);\n      this.setState({\n        profile: googleUser.getBasicProfile()\n      });\n      console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + this.state.profile.getName());\n      console.log('Given Name: ' + this.state.profile.getGivenName());\n      console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      console.log(\"Entered console.... \" + this.state.loggedIn); //login emission here\n\n      socket.emit(\"loggedin\", {\n        email: this.state.profile.getEmail()\n      });\n    };\n\n    this.onSignOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        loggedIn: false\n      });\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n      socket.emit('disconnect', {});\n    };\n\n    this.toLogin = () => {\n      console.log(\"In 1\");\n\n      if (this.state.loggedIn == true) {\n        this.setState({\n          page: \"Login\"\n        });\n      }\n    };\n\n    this.toStaff = () => {\n      console.log(\"In 2\");\n\n      if (this.state.loggedIn == true) {\n        this.setState({\n          page: \"Staff\"\n        });\n      }\n    };\n\n    this.toStudents = () => {\n      console.log(\"In 3\");\n\n      if (this.state.loggedIn == true) {\n        this.setState({\n          page: \"Students\"\n        });\n      }\n    };\n\n    this.toPartners = () => {\n      console.log(\"In 4\");\n\n      if (this.state.loggedIn == true) {\n        this.setState({\n          page: \"Partners\"\n        });\n      }\n    };\n\n    console.log(\"in app constructor\");\n    console.log(props.data);\n    /* \n    page values: Login, Students, Staff, Partners\n    */\n\n    this.state = {\n      loggedIn: false,\n      profile: null,\n      page: 'Login',\n      data: [{\n        filler: \"TO FILL WITH DATA\",\n        morefiller: \"TO FILL WITH DATA2\"\n      }]\n    }; // const socket = this.socket;\n    // console.log(\"LOOK HERE: \" + socket);\n\n    socket.emit('FINALLY', {\n      msg: \"event from App.js\"\n    });\n  }\n\n  /*\n    failsafe way: store the pages as things in divs, and render everything but selectively hide\n    \n  */\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(NavigationBar, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      toLogin: this.toLogin,\n      toPartners: this.toPartners,\n      toStaff: this.toStaff,\n      toStudents: this.toStudents,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }), React.createElement(Login, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Staff, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }), React.createElement(Students, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }), React.createElement(Partners, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // var test = document.getElementById(\"test\");\n// test.addEventListener(\"click\", function(){\n//   socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n//   console.log(\"Clicked workspace button\");\n// });\n// console.log('before the emission');\n// socket.emit('test', {testing: \"0000\"});\n// socket.on(\"sendingattempt\", function(data){\n//   console.log(\"sending from within app.js\");\n//   console.log(data.attempt);\n// });","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/App.js"],"names":["React","Component","ReactDOM","Link","GoogleLogin","BrowserRouter","Router","Route","Switch","NavigationBar","Login","Partners","Staff","Students","socket","App","constructor","props","onSignIn","googleUser","pageName","console","log","setState","loggedIn","state","profile","getBasicProfile","getId","getName","getGivenName","getEmail","emit","email","onSignOut","auth2","window","gapi","getAuthInstance","signOut","then","toLogin","page","toStaff","toStudents","toPartners","data","filler","morefiller","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport NavigationBar from './components/NavigationBar'\n\nimport Login from './pages/Login'\nimport Partners from './pages/Partners'\nimport Staff from './pages/Staff';\nimport Students from './pages/Students';\n\nimport socket from './components/SocketUser';\n// import Table from './components/Table'\n\n//Join is login stuff\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    console.log(\"in app constructor\");\n    console.log(props.data);\n\n    /* \n    page values: Login, Students, Staff, Partners\n    */\n    this.state = {loggedIn: false, profile: null, page: 'Login', data: [{filler: \"TO FILL WITH DATA\", morefiller: \"TO FILL WITH DATA2\"}]};\n\n    // const socket = this.socket;\n    // console.log(\"LOOK HERE: \" + socket);\n    socket.emit('FINALLY', {msg: \"event from App.js\"});\n\n  }\n\n\n  onSignIn = (googleUser, pageName) => {\n    console.log(\"SignedIn\");\n\n    this.setState({loggedIn: true});\n\n    console.log(\"signed in! \" + this.state.loggedIn);\n\n\n\n\n    this.setState({profile: googleUser.getBasicProfile()});\n\n    console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + this.state.profile.getName());\n    console.log('Given Name: ' + this.state.profile.getGivenName());\n    console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    console.log(\"Entered console.... \"  + this.state.loggedIn);\n\n    //login emission here\n    socket.emit(\"loggedin\", {email: this.state.profile.getEmail()});\n\n  }\n\n  onSignOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({loggedIn: false});\n\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n\n    socket.emit('disconnect', {});\n  }\n\n\n  toLogin = () =>{\n    console.log(\"In 1\");\n    if(this.state.loggedIn == true){\n      this.setState({page: \"Login\"})\n    }\n  }\n  toStaff = () =>{\n        console.log(\"In 2\");\n\n    if(this.state.loggedIn == true){\n      this.setState({page: \"Staff\"})\n    }\n  }\n  toStudents = () =>{\n    console.log(\"In 3\");\n\n    if(this.state.loggedIn == true){\n      this.setState({page: \"Students\"})\n    }\n  }\n  toPartners = () =>{\n        console.log(\"In 4\");\n\n    if(this.state.loggedIn == true){\n      this.setState({page: \"Partners\"})\n    }\n\n  }\n\n/*\n  failsafe way: store the pages as things in divs, and render everything but selectively hide\n  \n*/\n  render(){\n    return (\n      <div>\n        <NavigationBar loggedIn = {this.state.loggedIn} page = {this.state.page} toLogin = {this.toLogin} toPartners ={this.toPartners} toStaff = {this.toStaff} toStudents = {this.toStudents}/>\n\n        <Login loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Staff loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Students loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Partners loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n\n      </div>\n\n\n      )\n  }\n\n}\n\n\nexport default App;\n\n// var test = document.getElementById(\"test\");\n\n// test.addEventListener(\"click\", function(){\n//   socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n//   console.log(\"Clicked workspace button\");\n// });\n\n// console.log('before the emission');\n// socket.emit('test', {testing: \"0000\"});\n\n// socket.on(\"sendingattempt\", function(data){\n//   console.log(\"sending from within app.js\");\n//   console.log(data.attempt);\n\n// });\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}