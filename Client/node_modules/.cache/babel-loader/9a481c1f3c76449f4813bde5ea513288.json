{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport socket from './SocketUser';\nimport GoogleLogin from 'react-google-login';\nvar profile; // google user profile\n\nvar userID;\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.responseGoogle = response => {\n      console.log(\"FAILED TO SIGN IN. \" + JSON.stringify(response));\n    };\n\n    this.onSignIn = googleUser => {\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in!\");\n      profile = googleUser.getBasicProfile();\n      userID = profile.getId();\n      console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + profile.getName());\n      console.log('Given Name: ' + profile.getGivenName());\n      console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n    };\n\n    const loggedIn = false;\n  }\n\n  render() {\n    if (this.loggedIn == false) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, \" TEST \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \" create here \"), React.createElement(GoogleLogin, {\n        clientId: \"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\",\n        buttonText: \"Login\",\n        onSuccess: this.onSignIn,\n        onFailure: responseGoogle,\n        cookiePolicy: 'single_host_origin',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, \" Logged in! \"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" create here \"));\n    }\n  }\n\n}\n/*\n  // <div></div>\n  // <button id = \"SignOut\" onClick = {signOut}> Sign Out Here </button> \n  function signOut() {\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n  }\n*/\n// onSuccess={(response) => { this.setState({ userLoggedIn: true, }, () => { localStorage.setItem('userLoggedIn', true); });\n// ReactDOM.render(\n//   <GoogleLogin\n//     clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n//     buttonText=\"Login\"\n//     onSuccess={responseGoogle}\n//     onFailure={responseGoogle}\n//     cookiePolicy={'single_host_origin'}\n//   />,\n//   document.getElementById('googleButton')\n// );\n\n\nvar test = document.getElementById(\"test\");\ntest.addEventListener(\"click\", function () {\n  socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n  console.log(\"ENTERED\");\n});\nconsole.log('before the emission');\nsocket.emit('test', {\n  testing: \"0000\"\n});\nsocket.on(\"sendingattempt\", function (data) {\n  console.log(data.attempt);\n});\nexport default Login;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/client/src/components/Login.js"],"names":["React","Component","ReactDOM","Link","socket","GoogleLogin","profile","userID","Login","constructor","props","responseGoogle","response","console","log","JSON","stringify","onSignIn","googleUser","setState","loggedIn","getBasicProfile","getId","getName","getGivenName","getEmail","render","test","document","getElementById","addEventListener","emit","testing","on","data","attempt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from 'react-router-dom';\nimport socket from './SocketUser';\nimport GoogleLogin from 'react-google-login';\n\n\nvar profile;                     // google user profile\nvar userID; \n\nclass Login extends Component {\n\n  constructor(props){\n    super(props);\n    const loggedIn = false;\n  }\n\n    responseGoogle = (response) => {\n      console.log(\"FAILED TO SIGN IN. \" + JSON.stringify(response));\n    }\n\n  onSignIn = (googleUser) => {\n    this.setState({loggedIn: true});\n\n    console.log(\"signed in!\");\n\n    profile = googleUser.getBasicProfile();\n    userID = profile.getId();\n\n    console.log('ID: ' + profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + profile.getName());\n    console.log('Given Name: ' + profile.getGivenName());\n    console.log('Email: ' + profile.getEmail()); // This is null if the 'email' scope is not present.\n\n  }\n\n  render() {\n    if (this.loggedIn == false){\n    return(\n      <div>\n        <h1> TEST </h1>\n        <h2> create here </h2>\n        <GoogleLogin\n          clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n          buttonText=\"Login\"\n          onSuccess={this.onSignIn}\n          onFailure={responseGoogle}\n          cookiePolicy={'single_host_origin'}\n        />\n      </div>\n      );\n    }\n    else{\n      return (\n        <div>\n          <h1> Logged in! </h1>\n          <h2> create here </h2>\n        </div>\n      )\n    }\n\n  }\n}\n\n \n\n\n\n\n/*\n  // <div></div>\n  // <button id = \"SignOut\" onClick = {signOut}> Sign Out Here </button> \n  function signOut() {\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n  }\n*/\n\n\n// onSuccess={(response) => { this.setState({ userLoggedIn: true, }, () => { localStorage.setItem('userLoggedIn', true); });\n\n// ReactDOM.render(\n//   <GoogleLogin\n//     clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n//     buttonText=\"Login\"\n//     onSuccess={responseGoogle}\n//     onFailure={responseGoogle}\n//     cookiePolicy={'single_host_origin'}\n//   />,\n//   document.getElementById('googleButton')\n// );\n\nvar test = document.getElementById(\"test\");\n\ntest.addEventListener(\"click\", function(){\n  socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n  console.log(\"ENTERED\");\n});\n\nconsole.log('before the emission');\nsocket.emit('test', {testing: \"0000\"});\n\nsocket.on(\"sendingattempt\", function(data){\n  console.log(data.attempt);\n});\n\n\n\n\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}