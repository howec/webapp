{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/client/src/components/Login.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { GoogleLogin } from 'react-google-login';\n\nconst responseGoogle = response => {\n  console.log(response);\n};\n\nReactDOM.render(React.createElement(GoogleLogin, {\n  clientId: \"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\",\n  buttonText: \"Login\",\n  onSuccess: responseGoogle,\n  onFailure: responseGoogle,\n  cookiePolicy: 'single_host_origin',\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15\n  },\n  __self: this\n}), document.getElementById('googleButton'));\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    const socket = props.socket;\n  }\n\n  test4() {\n    console.log('before the emission');\n    this.socket.emit('test', {\n      testing: \"0000\"\n    });\n    this.socket.on(\"sendingattempt\", function (data) {\n      console.log(data.attempt);\n    }); //implement way to prevent ddos attacks later.... max amount of workspaces per user\n    //test whether I can create \"account\"\n\n    var test = document.getElementById(\"test\");\n    test.addEventListener(\"click\", function () {\n      this.socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n      console.log(\"ENTERED\");\n    });\n  }\n\n  render() {\n    // const { socket } = this.props;\n    // console.log(\"entered: \" + socket);\n    // socket.emit('FINALLY', {msg: \"FINALLY IN JOIN!!! OMG PLEASE\"});\n    return React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, \" Login \");\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/client/src/components/Login.js"],"names":["React","Component","Link","GoogleLogin","responseGoogle","response","console","log","ReactDOM","render","document","getElementById","Login","constructor","props","socket","test4","emit","testing","on","data","attempt","test","addEventListener"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AAKA,SAASC,WAAT,QAA4B,oBAA5B;;AAGA,MAAMC,cAAc,GAAIC,QAAD,IAAc;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD,CAFD;;AAIAG,QAAQ,CAACC,MAAT,CACE,oBAAC,WAAD;AACE,EAAA,QAAQ,EAAC,0EADX;AAEE,EAAA,UAAU,EAAC,OAFb;AAGE,EAAA,SAAS,EAAEL,cAHb;AAIE,EAAA,SAAS,EAAEA,cAJb;AAKE,EAAA,YAAY,EAAE,oBALhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAQEM,QAAQ,CAACC,cAAT,CAAwB,cAAxB,CARF;;AAcA,MAAMC,KAAN,SAAoBX,SAApB,CAA8B;AAE5BY,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,UAETC,MAFS,GAECD,KAFD,CAETC,MAFS;AAKjB;;AAGHC,EAAAA,KAAK,GAAE;AACHV,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,SAAKQ,MAAL,CAAYE,IAAZ,CAAiB,MAAjB,EAAyB;AAACC,MAAAA,OAAO,EAAE;AAAV,KAAzB;AAEA,SAAKH,MAAL,CAAYI,EAAZ,CAAe,gBAAf,EAAiC,UAASC,IAAT,EAAc;AAC7Cd,MAAAA,OAAO,CAACC,GAAR,CAAYa,IAAI,CAACC,OAAjB;AACD,KAFD,EAJG,CAUH;AAEA;;AACA,QAAIC,IAAI,GAAGZ,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAX;AACAW,IAAAA,IAAI,CAACC,gBAAL,CAAsB,OAAtB,EAA+B,YAAU;AACvC,WAAKR,MAAL,CAAYE,IAAZ,CAAiB,iBAAjB,EAAoC,MAApC,EAA4C,KAA5C;AACAX,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,KAHD;AAKH;;AAKCE,EAAAA,MAAM,GAAG;AAGP;AACA;AAEA;AAEA,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAR;AACD;;AA3C2B;;AAgD9B,eAAeG,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport {Link} from 'react-router-dom';\n\n\n\n\nimport { GoogleLogin } from 'react-google-login';\n \n \nconst responseGoogle = (response) => {\n  console.log(response);\n}\n \nReactDOM.render(\n  <GoogleLogin\n    clientId=\"658977310896-knrl3gka66fldh83dao2rhgbblmd4un9.apps.googleusercontent.com\"\n    buttonText=\"Login\"\n    onSuccess={responseGoogle}\n    onFailure={responseGoogle}\n    cookiePolicy={'single_host_origin'}\n  />,\n  document.getElementById('googleButton')\n);\n\n\n\n\nclass Login extends Component {\n\n  constructor(props){\n    super(props);\n    const {socket} = props;\n\n\n  }\n\n\ntest4(){\n    console.log('before the emission');\n    this.socket.emit('test', {testing: \"0000\"});\n\n    this.socket.on(\"sendingattempt\", function(data){\n      console.log(data.attempt);\n    });\n\n\n\n    //implement way to prevent ddos attacks later.... max amount of workspaces per user\n\n    //test whether I can create \"account\"\n    var test = document.getElementById(\"test\");\n    test.addEventListener(\"click\", function(){\n      this.socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n      console.log(\"ENTERED\");\n    });\n\n}\n\n\n\n\n  render() {\n\n\n    // const { socket } = this.props;\n    // console.log(\"entered: \" + socket);\n\n    // socket.emit('FINALLY', {msg: \"FINALLY IN JOIN!!! OMG PLEASE\"});\n\n    return (<h1> Login </h1>);\n  }\n}\n\n\n\nexport default Login;\n\n\n"]},"metadata":{},"sourceType":"module"}