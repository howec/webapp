{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport Login from './pages/landing/LoginLanding';\nimport Partners from './pages/partners/PartnersLanding';\nimport Staff from './pages/staff/StaffLanding';\nimport Students from './pages/students/StudentsLanding';\nimport socket from './components/SocketUser';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSignIn = (googleUser, pageName) => {\n      //should I be configuring a \"group?\"\n      //!!!!!TODO: need to make a function to get the url stuff, input from staff\n      let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n      this.setState({\n        url: urlStuff\n      });\n      console.log(\"SignedIn\");\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in! \" + this.state.loggedIn);\n      console.log(\"URL: \" + this.state.url); //!!!!!TODO: some function to tell you what group the person belongs in\n\n      this.setState({\n        group: \"Partners\"\n      });\n      console.log(\"new group is: \" + this.state.group);\n      console.log(\"signed in! \" + this.state.loggedIn);\n      this.setState({\n        profile: googleUser.getBasicProfile()\n      });\n      console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + this.state.profile.getName());\n      console.log('Given Name: ' + this.state.profile.getGivenName());\n      console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      console.log(\"Entered console.... \" + this.state.loggedIn); //login emission here\n\n      socket.emit(\"loggedin\", {\n        email: this.state.profile.getEmail()\n      }); //function to get the corresponding row entry from the appropriate sheet\n    };\n\n    this.onSignOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        loggedIn: false,\n        group: null,\n        url: null\n      });\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n      socket.emit('loggedout', {});\n    };\n\n    this.updateStates = dict => {\n      this.setState(dict);\n    };\n\n    console.log(\"in app constructor\");\n    /* \n    group values: null, Students, Staff, Partners\n    */\n\n    this.state = {\n      url: null,\n      loggedIn: false,\n      group: null,\n      profile: null,\n      data: [{\n        filler: \"TO FILL WITH DATA\",\n        morefiller: \"TO FILL WITH DATA2\"\n      }]\n    }; // const socket = this.socket;\n    // console.log(\"LOOK HERE: \" + socket);\n\n    socket.emit('FINALLY', {\n      msg: \"event from App.js\"\n    });\n  }\n\n  /*\n    failsafe way: store the pages as things in divs, and render everything but selectively hide\n    \n  */\n  render() {\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Login, {\n      url: [\"Applica\", \"\"],\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }), React.createElement(Staff, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }), React.createElement(Students, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Partners, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // var test = document.getElementById(\"test\");\n// test.addEventListener(\"click\", function(){\n//   socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n//   console.log(\"Clicked workspace button\");\n// });\n// console.log('before the emission');\n// socket.emit('test', {testing: \"0000\"});\n// socket.on(\"sendingattempt\", function(data){\n//   console.log(\"sending from within app.js\");\n//   console.log(data.attempt);\n// });","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/App.js"],"names":["React","Component","Login","Partners","Staff","Students","socket","App","constructor","props","onSignIn","googleUser","pageName","urlStuff","setState","url","console","log","loggedIn","state","group","profile","getBasicProfile","getId","getName","getGivenName","getEmail","emit","email","onSignOut","auth2","window","gapi","getAuthInstance","signOut","then","updateStates","dict","data","filler","morefiller","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Login from './pages/landing/LoginLanding'\nimport Partners from './pages/partners/PartnersLanding'\nimport Staff from './pages/staff/StaffLanding';\nimport Students from './pages/students/StudentsLanding';\n\nimport socket from './components/SocketUser';\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    console.log(\"in app constructor\");\n\n    /* \n    group values: null, Students, Staff, Partners\n    */\n    this.state = {url: null, loggedIn: false, group: null, profile: null, data: [{filler: \"TO FILL WITH DATA\", morefiller: \"TO FILL WITH DATA2\"}]};\n\n\n    // const socket = this.socket;\n    // console.log(\"LOOK HERE: \" + socket);\n    socket.emit('FINALLY', {msg: \"event from App.js\"});\n\n  }\n\n\n  onSignIn = (googleUser, pageName) => {\n    //should I be configuring a \"group?\"\n\n\n    //!!!!!TODO: need to make a function to get the url stuff, input from staff\n    let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n    this.setState({url: urlStuff});\n\n\n\n    console.log(\"SignedIn\");\n    this.setState({loggedIn: true});\n    console.log(\"signed in! \" + this.state.loggedIn);\n            console.log(\"URL: \" + this.state.url);\n\n\n    //!!!!!TODO: some function to tell you what group the person belongs in\n    this.setState({group: \"Partners\"})\n    console.log(\"new group is: \" + this.state.group);\n    console.log(\"signed in! \" + this.state.loggedIn);\n\n\n    this.setState({profile: googleUser.getBasicProfile()});\n\n    console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + this.state.profile.getName());\n    console.log('Given Name: ' + this.state.profile.getGivenName());\n    console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    console.log(\"Entered console.... \"  + this.state.loggedIn);\n\n    //login emission here\n    socket.emit(\"loggedin\", {email: this.state.profile.getEmail()});\n\n    //function to get the corresponding row entry from the appropriate sheet\n\n  }\n\n  onSignOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({loggedIn: false, group: null, url: null});\n\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n\n    socket.emit('loggedout', {});\n  }\n\n\n  updateStates = (dict) =>{\n    this.setState(dict);\n  }\n\n\n\n/*\n  failsafe way: store the pages as things in divs, and render everything but selectively hide\n  \n*/\n  render(){\n    console.log(\"inside app.js render..... \" + this.state.url);\n\n    return (\n      <div>\n\n        <Login url = {[\"Applica\", \"\"]} group = {this.state.group} loggedIn = {this.state.loggedIn} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Staff url = {this.state.url} group = {this.state.group} loggedIn = {this.state.loggedIn} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Students url = {this.state.url} group = {this.state.group} loggedIn = {this.state.loggedIn} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Partners url = {this.state.url} group = {this.state.group} loggedIn = {this.state.loggedIn} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n\n      </div>\n\n\n      )\n  }\n\n}\n\n\nexport default App;\n\n// var test = document.getElementById(\"test\");\n\n// test.addEventListener(\"click\", function(){\n//   socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n//   console.log(\"Clicked workspace button\");\n// });\n\n// console.log('before the emission');\n// socket.emit('test', {testing: \"0000\"});\n\n// socket.on(\"sendingattempt\", function(data){\n//   console.log(\"sending from within app.js\");\n//   console.log(data.attempt);\n\n// });\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}