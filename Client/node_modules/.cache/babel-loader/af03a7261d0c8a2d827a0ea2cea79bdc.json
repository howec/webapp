{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport Login from './pages/landing/LoginLanding';\nimport Partners from './pages/partners/PartnersLanding';\nimport Staff from './pages/staff/StaffLanding';\nimport Students from './pages/students/StudentsLanding';\nimport socket from './components/SocketUser';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.staffSignIn = () => {};\n\n    this.partnerSignIn = () => {};\n\n    this.onSignIn = googleUser => {\n      //should I be configuring a \"group?\"\n      //!!!!!TODO: need to make a function to get the url stuff, input from staff\n      let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n      this.setState({\n        url: urlStuff\n      });\n      console.log(\"SignedIn\");\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in! \" + this.state.loggedIn);\n      console.log(\"URL: \" + this.state.url); //!!!!!TODO: some function to tell you what group the person belongs in\n\n      this.setState({\n        group: \"Staff\"\n      });\n      console.log(\"new group is: \" + this.state.group);\n      console.log(\"signed in! \" + this.state.loggedIn);\n      this.setState({\n        profile: googleUser.getBasicProfile()\n      });\n      console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + this.state.profile.getName());\n      console.log('Given Name: ' + this.state.profile.getGivenName());\n      console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      console.log(\"Entered console.... \" + this.state.loggedIn); //login emission here... this is BEFORE any authentication\n\n      socket.emit(\"loggedin\", {\n        email: this.state.profile.getEmail()\n      });\n      socket.on(\"sendingattempt\", data => {\n        console.log(\"IN SENDING ATTEMPT\");\n        console.log(data);\n        this.setState({\n          data: data[\"attempt\"]\n        });\n        console.log(\"From within the set state.... \" + JSON.stringify(this.state.data));\n      }); //function to get the corresponding row entry from the appropriate sheet\n    };\n\n    this.onSignOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        loggedIn: false,\n        group: null,\n        url: null\n      });\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n      socket.emit('loggedout', {});\n    };\n\n    console.log(\"in app constructor\");\n    /* \n    group values: null, Students, Staff, Partners\n    */\n\n    this.state = {\n      url: null,\n      loggedIn: false,\n      group: null,\n      profile: null,\n      data: null\n    };\n    socket.emit('FINALLY', {\n      msg: \"event from App.js\"\n    });\n  }\n\n  /*\n    failsafe way: store the pages as things in divs, and render everything but selectively hide\n  */\n  render() {\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Login, {\n      url: [\"Applica\", \"\"],\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Staff, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }), React.createElement(Students, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }), React.createElement(Partners, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/App.js"],"names":["React","Component","Login","Partners","Staff","Students","socket","App","constructor","props","staffSignIn","partnerSignIn","onSignIn","googleUser","urlStuff","setState","url","console","log","loggedIn","state","group","profile","getBasicProfile","getId","getName","getGivenName","getEmail","emit","email","on","data","JSON","stringify","onSignOut","auth2","window","gapi","getAuthInstance","signOut","then","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport Login from './pages/landing/LoginLanding'\nimport Partners from './pages/partners/PartnersLanding'\nimport Staff from './pages/staff/StaffLanding';\nimport Students from './pages/students/StudentsLanding';\n\nimport socket from './components/SocketUser';\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    console.log(\"in app constructor\");\n\n    /* \n    group values: null, Students, Staff, Partners\n    */\n    this.state = {url: null, loggedIn: false, group: null, profile: null, data: null};\n\n    socket.emit('FINALLY', {msg: \"event from App.js\"});\n  }\n\n\n  staffSignIn = () =>{\n\n  }\n\n  partnerSignIn = () => {\n\n  }\n\n  onSignIn = (googleUser) => {\n    //should I be configuring a \"group?\"\n\n\n    //!!!!!TODO: need to make a function to get the url stuff, input from staff\n    let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n    this.setState({url: urlStuff});\n\n    console.log(\"SignedIn\");\n    this.setState({loggedIn: true});\n    console.log(\"signed in! \" + this.state.loggedIn);\n            console.log(\"URL: \" + this.state.url);\n\n\n    //!!!!!TODO: some function to tell you what group the person belongs in\n    this.setState({group: \"Staff\"})\n    console.log(\"new group is: \" + this.state.group);\n    console.log(\"signed in! \" + this.state.loggedIn);\n\n\n    this.setState({profile: googleUser.getBasicProfile()});\n\n    console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + this.state.profile.getName());\n    console.log('Given Name: ' + this.state.profile.getGivenName());\n    console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    console.log(\"Entered console.... \"  + this.state.loggedIn);\n\n    //login emission here... this is BEFORE any authentication\n    socket.emit(\"loggedin\", {email: this.state.profile.getEmail()});\n\n    socket.on(\"sendingattempt\", (data) =>{\n      console.log(\"IN SENDING ATTEMPT\");\n        console.log(data);\n        this.setState({data: data[\"attempt\"]});\n        console.log(\"From within the set state.... \" + JSON.stringify(this.state.data));\n\n    });\n    //function to get the corresponding row entry from the appropriate sheet\n\n  }\n\n\n  onSignOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({loggedIn: false, group: null, url: null});\n\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n\n    socket.emit('loggedout', {});\n  }\n\n\n/*\n  failsafe way: store the pages as things in divs, and render everything but selectively hide\n*/\n  render(){\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return (\n      <div>\n        <Login\n          url = {[\"Applica\", \"\"]}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut} />\n        <Staff url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n        <Students\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n        <Partners\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}