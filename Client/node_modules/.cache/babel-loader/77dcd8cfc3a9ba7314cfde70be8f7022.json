{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 8\n  },\n  __self: this\n}), document.getElementById('root')); // ReactDOM.render(<App />, document.querySelector('#root'));\n\n$(document).ready(function () {\n  var socket = io();\n  var $window = $(window);\n  var $loginPage = $('.login.page'); // the login page\n\n  var $joinPage = $('.join.page'); // the join page\n\n  var $connectPage = $('.connect.page'); // the connect page\n\n  var spamDictionary = {};\n  var connectedDictionary = {}; // dict of who user has connected to\n\n  var spaceDictionary = {}; // list of spaces and members in it\n\n  var gUserProfile; // google user profile\n\n  var gUserID; // google user ID\n\n  var email; // user's email\n\n  var chosenSpace; // user's current space\n\n  var userPosting = null; // user's posting with topic, category, status\n\n  var connected = false;\n  var cory = 'Cory Hall';\n  var soda = 'Soda Hall';\n  var mlk = 'MLK Student Union';\n  var moffitt = 'Moffitt Library';\n  var doe = 'Doe Library'; // ------------------------ LOGIN PAGE ------------------------\n\n  $('#enter').on('click', function (e) {\n    checkIfDuplicateUser();\n  }); // google auth signin\n\n  window.onSignIn = function (googleUser) {\n    // save off user's google profile and id\n    // TODO: deal with auth/security concerns re: google id's\n    // https://developers.google.com/identity/sign-in/web/people\n    // https://developers.google.com/identity/sign-in/web/backend-auth\n    gUserProfile = googleUser.getBasicProfile();\n    gUserID = gUserProfile.getId();\n    console.log('Full Name: ' + gUserProfile.getName());\n    console.log('Given Name: ' + gUserProfile.getGivenName());\n    console.log(\"Email: \" + gUserProfile.getEmail());\n    console.log(\"signed in!\");\n  };\n});","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/client/src/index.js"],"names":["React","ReactDOM","App","render","document","getElementById","$","ready","socket","io","$window","window","$loginPage","$joinPage","$connectPage","spamDictionary","connectedDictionary","spaceDictionary","gUserProfile","gUserID","email","chosenSpace","userPosting","connected","cory","soda","mlk","moffitt","doe","on","e","checkIfDuplicateUser","onSignIn","googleUser","getBasicProfile","getId","console","log","getName","getGivenName","getEmail"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,GAAP,MAAgB,OAAhB;AAIAD,QAAQ,CAACE,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB,E,CACA;;AAIAC,CAAC,CAACF,QAAD,CAAD,CAAYG,KAAZ,CAAkB,YAAW;AAC3B,MAAIC,MAAM,GAAGC,EAAE,EAAf;AACA,MAAIC,OAAO,GAAGJ,CAAC,CAACK,MAAD,CAAf;AACA,MAAIC,UAAU,GAAGN,CAAC,CAAC,aAAD,CAAlB,CAH2B,CAGY;;AACvC,MAAIO,SAAS,GAAGP,CAAC,CAAC,YAAD,CAAjB,CAJ2B,CAIY;;AACvC,MAAIQ,YAAY,GAAGR,CAAC,CAAC,eAAD,CAApB,CAL2B,CAKY;;AAEvC,MAAIS,cAAc,GAAG,EAArB;AACA,MAAIC,mBAAmB,GAAG,EAA1B,CAR2B,CAQW;;AACtC,MAAIC,eAAe,GAAG,EAAtB,CAT2B,CASW;;AACtC,MAAIC,YAAJ,CAV2B,CAUW;;AACtC,MAAIC,OAAJ,CAX2B,CAWW;;AACtC,MAAIC,KAAJ,CAZ2B,CAYW;;AACtC,MAAIC,WAAJ,CAb2B,CAaW;;AACtC,MAAIC,WAAW,GAAG,IAAlB,CAd2B,CAcW;;AACtC,MAAIC,SAAS,GAAG,KAAhB;AAEA,MAAIC,IAAI,GAAG,WAAX;AACA,MAAIC,IAAI,GAAG,WAAX;AACA,MAAIC,GAAG,GAAG,mBAAV;AACA,MAAIC,OAAO,GAAG,iBAAd;AACA,MAAIC,GAAG,GAAG,aAAV,CArB2B,CAuB3B;;AACAtB,EAAAA,CAAC,CAAC,QAAD,CAAD,CAAYuB,EAAZ,CAAe,OAAf,EAAwB,UAAUC,CAAV,EAAa;AACnCC,IAAAA,oBAAoB;AACrB,GAFD,EAxB2B,CA4B3B;;AACApB,EAAAA,MAAM,CAACqB,QAAP,GAAkB,UAAUC,UAAV,EAAsB;AACtC;AACA;AACA;AACA;AACAf,IAAAA,YAAY,GAAGe,UAAU,CAACC,eAAX,EAAf;AACAf,IAAAA,OAAO,GAAGD,YAAY,CAACiB,KAAb,EAAV;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBnB,YAAY,CAACoB,OAAb,EAA5B;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBnB,YAAY,CAACqB,YAAb,EAA7B;AACAH,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAYnB,YAAY,CAACsB,QAAb,EAAxB;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAZD;AAcD,CA3CD","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n// ReactDOM.render(<App />, document.querySelector('#root'));\n\n\n\n$(document).ready(function() {\n  var socket = io();\n  var $window = $(window);\n  var $loginPage = $('.login.page');     // the login page\n  var $joinPage = $('.join.page');       // the join page\n  var $connectPage = $('.connect.page'); // the connect page\n\n  var spamDictionary = {};\n  var connectedDictionary = {};         // dict of who user has connected to\n  var spaceDictionary = {};             // list of spaces and members in it\n  var gUserProfile;                     // google user profile\n  var gUserID;                          // google user ID\n  var email;                            // user's email\n  var chosenSpace;                      // user's current space\n  var userPosting = null;               // user's posting with topic, category, status\n  var connected = false;\n\n  var cory = 'Cory Hall';\n  var soda = 'Soda Hall';\n  var mlk = 'MLK Student Union';\n  var moffitt = 'Moffitt Library';\n  var doe = 'Doe Library';\n\n  // ------------------------ LOGIN PAGE ------------------------\n  $('#enter').on('click', function (e) {\n    checkIfDuplicateUser();\n  });\n\n  // google auth signin\n  window.onSignIn = function (googleUser) {\n    // save off user's google profile and id\n    // TODO: deal with auth/security concerns re: google id's\n    // https://developers.google.com/identity/sign-in/web/people\n    // https://developers.google.com/identity/sign-in/web/backend-auth\n    gUserProfile = googleUser.getBasicProfile();\n    gUserID = gUserProfile.getId();\n\n    console.log('Full Name: ' + gUserProfile.getName());\n    console.log('Given Name: ' + gUserProfile.getGivenName());\n    console.log(\"Email: \" + gUserProfile.getEmail());\n    console.log(\"signed in!\");\n  };\n\n});\n\n"]},"metadata":{},"sourceType":"module"}