{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Link } from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Login from './pages/Login';\nimport Partners from './pages/Partners/Partners';\nimport Staff from './pages/Staff/Staff';\nimport Students from './pages/Students/Students';\nimport socket from './components/SocketUser'; // import Table from './components/Table'\n//Join is login stuff\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSignIn = (googleUser, pageName) => {\n      //should I be configuring a \"group?\"\n      console.log(\"SignedIn\");\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in! \" + this.state.loggedIn);\n      this.setState({\n        profile: googleUser.getBasicProfile()\n      });\n      console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + this.state.profile.getName());\n      console.log('Given Name: ' + this.state.profile.getGivenName());\n      console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      console.log(\"Entered console.... \" + this.state.loggedIn); //login emission here\n\n      socket.emit(\"loggedin\", {\n        email: this.state.profile.getEmail()\n      });\n    };\n\n    this.onSignOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        loggedIn: false\n      });\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n      socket.emit('loggedout', {});\n    };\n\n    console.log(\"in app constructor\");\n    console.log(props.data);\n    /* \n    page values: Login, Students, Staff, Partners\n    */\n\n    this.state = {\n      loggedIn: false,\n      group: null,\n      profile: null,\n      page: 'Login',\n      data: [{\n        filler: \"TO FILL WITH DATA\",\n        morefiller: \"TO FILL WITH DATA2\"\n      }]\n    }; //TODO: some function to tell you what group the person belongs in\n    // const socket = this.socket;\n    // console.log(\"LOOK HERE: \" + socket);\n\n    socket.emit('FINALLY', {\n      msg: \"event from App.js\"\n    });\n  }\n\n  /*\n    failsafe way: store the pages as things in divs, and render everything but selectively hide\n    \n  */\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(Login, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(Staff, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Students, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(Partners, {\n      loggedIn: this.state.loggedIn,\n      page: this.state.page,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App; // var test = document.getElementById(\"test\");\n// test.addEventListener(\"click\", function(){\n//   socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n//   console.log(\"Clicked workspace button\");\n// });\n// console.log('before the emission');\n// socket.emit('test', {testing: \"0000\"});\n// socket.on(\"sendingattempt\", function(data){\n//   console.log(\"sending from within app.js\");\n//   console.log(data.attempt);\n// });","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/App.js"],"names":["React","Component","ReactDOM","Link","GoogleLogin","BrowserRouter","Router","Route","Switch","Login","Partners","Staff","Students","socket","App","constructor","props","onSignIn","googleUser","pageName","console","log","setState","loggedIn","state","profile","getBasicProfile","getId","getName","getGivenName","getEmail","emit","email","onSignOut","auth2","window","gapi","getAuthInstance","signOut","then","data","group","page","filler","morefiller","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport {Link} from 'react-router-dom';\nimport GoogleLogin from 'react-google-login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\nimport Login from './pages/Login'\nimport Partners from './pages/Partners/Partners'\nimport Staff from './pages/Staff/Staff';\nimport Students from './pages/Students/Students';\n\nimport socket from './components/SocketUser';\n// import Table from './components/Table'\n\n//Join is login stuff\n\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    console.log(\"in app constructor\");\n    console.log(props.data);\n\n    /* \n    page values: Login, Students, Staff, Partners\n    */\n    this.state = {loggedIn: false, group: null, profile: null, page: 'Login', data: [{filler: \"TO FILL WITH DATA\", morefiller: \"TO FILL WITH DATA2\"}]};\n\n    //TODO: some function to tell you what group the person belongs in\n\n\n    // const socket = this.socket;\n    // console.log(\"LOOK HERE: \" + socket);\n    socket.emit('FINALLY', {msg: \"event from App.js\"});\n\n  }\n\n\n  onSignIn = (googleUser, pageName) => {\n    //should I be configuring a \"group?\"\n\n    console.log(\"SignedIn\");\n    this.setState({loggedIn: true});\n    console.log(\"signed in! \" + this.state.loggedIn);\n\n\n    this.setState({profile: googleUser.getBasicProfile()});\n\n    console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + this.state.profile.getName());\n    console.log('Given Name: ' + this.state.profile.getGivenName());\n    console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    console.log(\"Entered console.... \"  + this.state.loggedIn);\n\n    //login emission here\n    socket.emit(\"loggedin\", {email: this.state.profile.getEmail()});\n\n  }\n\n  onSignOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({loggedIn: false});\n\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n\n    socket.emit('loggedout', {});\n  }\n\n\n\n/*\n  failsafe way: store the pages as things in divs, and render everything but selectively hide\n  \n*/\n  render(){\n    return (\n      <div>\n\n        <Login  loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Staff loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Students loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n        <Partners loggedIn = {this.state.loggedIn} page = {this.state.page} onSignIn = {this.onSignIn} onSignOut = {this.onSignOut} />\n\n      </div>\n\n\n      )\n  }\n\n}\n\n\nexport default App;\n\n// var test = document.getElementById(\"test\");\n\n// test.addEventListener(\"click\", function(){\n//   socket.emit(\"createWorkspace\", \"NAME\", \"URL\");\n//   console.log(\"Clicked workspace button\");\n// });\n\n// console.log('before the emission');\n// socket.emit('test', {testing: \"0000\"});\n\n// socket.on(\"sendingattempt\", function(data){\n//   console.log(\"sending from within app.js\");\n//   console.log(data.attempt);\n\n// });\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}