{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/pages/landing/subpages/Login.js\";\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login'; // import { Button, Form, Col, FormGroup, Checkbox } from 'react-bootstrap'\n\nimport Form from 'react-bootstrap/Form';\nimport { Button } from 'react-bootstrap';\nimport socket from '../../../components/SocketUser';\nimport { Column, Row } from 'simple-flexbox';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.responseGoogleFail = response => {\n      console.log(\"FAILED TO SIGN IN. \" + JSON.stringify(response));\n    };\n\n    this.responseGoogleSucceed = response => {\n      console.log(\"Succeeded signing in! \" + JSON.stringify(response));\n      console.log(response);\n      this.props.onSignIn(response);\n    };\n\n    this.sendLogin = event => {\n      event.preventDefault();\n      let email = document.getElementById('formBasicEmail').value;\n      let password = document.getElementById('formBasicPassword').value;\n      socket.emit(\"FormSubmitted\", {\n        workspace: this.state.workspace,\n        group: this.state.group,\n        email: email,\n        password: password\n      });\n    };\n\n    this.sendWorkspace = event => {\n      event.preventDefault();\n      let workspace = document.getElementById('formBasicWorkspaceName').value;\n      socket.emit(\"workspaceSubmitted\", {\n        workspace: workspace\n      });\n      console.log(\"IN THE sendWorkspace function!\"); //assuming that the validation function actually works...\n\n      socket.on('workspaceValidation', data => {\n        if (data.valid == true) {\n          this.setState({\n            workspace: workspace,\n            valid: true,\n            step: \"LoginAs\"\n          });\n        } else {\n          this.setState({\n            valid: false\n          });\n        }\n      });\n    };\n\n    this.errorMessage = () => {\n      console.log(\"IN ERROR MESSAGE : \" + this.state.valid);\n\n      if (this.state.valid != false) {\n        return null;\n      }\n\n      return React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(\"font\", {\n        color: \"#CD5C5C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"That workspace doesn't exist!\")));\n    };\n\n    this.setGroupStaff = () => {\n      this.setState({\n        group: \"Staff\",\n        step: \"Staff\"\n      });\n    };\n\n    this.setGroupStudents = () => {\n      this.setState({\n        group: \"Students\",\n        step: \"Students\"\n      });\n    };\n\n    this.setGroupPartners = () => {\n      this.setState({\n        group: \"Partners\",\n        step: \"Partners\"\n      });\n    };\n\n    this.state = {\n      valid: null,\n      step: null,\n      workspace: null,\n      group: null\n    };\n  }\n\n  render() {\n    if (this.state.step == null) {\n      return React.createElement(\"div\", {\n        className: \"center-me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Column, {\n        horizontal: \"center\",\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, \"Login to your workspace\")), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.sendWorkspace,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicWorkspaceName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"Workspace name\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"text\",\n        placeholder: \"Enter workspace name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      })), this.errorMessage(), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Go!\")), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(GoogleLogin, {\n        clientId: \"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\",\n        buttonText: \"Login with Google\",\n        onSuccess: this.responseGoogleSucceed,\n        onFailure: this.responseGoogleFail,\n        cookiePolicy: 'single_host_origin',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }))))));\n    } else if (this.state.step == \"LoginAs\") {\n      return React.createElement(\"div\", {\n        className: \"center-me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Column, {\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \" Which are you logging in as? \")), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setGroupStaff,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Staff\")), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setGroupPartners,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Partner\")), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: this.setGroupStudents,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Student\"))));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"center-me\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Column, {\n        horizontal: \"center\",\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, this.state.group)), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.sendLogin,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Email address\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"email\",\n        placeholder: \"Enter email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(Form.Group, {\n        controlId: \"formPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, \"Password\"), React.createElement(Form.Control, {\n        required: true,\n        type: \"password\",\n        placeholder: \"Enter password\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Row, {\n        horizontal: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"primary\",\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Login!\")), React.createElement(GoogleLogin, {\n        clientId: \"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\",\n        buttonText: \"Login with Google\",\n        onSuccess: this.responseGoogleSucceed,\n        onFailure: this.responseGoogleFail,\n        cookiePolicy: 'single_host_origin',\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      })))));\n    }\n  }\n\n}\n\nexport default Login;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/pages/landing/subpages/Login.js"],"names":["React","Component","ReactDOM","GoogleLogin","Form","Button","socket","Column","Row","Login","constructor","props","responseGoogleFail","response","console","log","JSON","stringify","responseGoogleSucceed","onSignIn","sendLogin","event","preventDefault","email","document","getElementById","value","password","emit","workspace","state","group","sendWorkspace","on","data","valid","setState","step","errorMessage","setGroupStaff","setGroupStudents","setGroupPartners","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport GoogleLogin from 'react-google-login';\n\n// import { Button, Form, Col, FormGroup, Checkbox } from 'react-bootstrap'\nimport Form from 'react-bootstrap/Form'\nimport { Button} from 'react-bootstrap';\n\nimport socket from '../../../components/SocketUser';\nimport { Column, Row } from 'simple-flexbox';\n\n\nclass Login extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {valid: null, step: null, workspace: null, group: null}\n  }\n\n  responseGoogleFail = (response) => {\n    console.log(\"FAILED TO SIGN IN. \" + JSON.stringify(response));\n  }\n\n  responseGoogleSucceed = (response) => {\n    console.log(\"Succeeded signing in! \" + JSON.stringify(response));\n    console.log(response);\n\n    this.props.onSignIn(response);\n  }\n\n\n\n  sendLogin = (event) =>{\n    event.preventDefault();\n\n    let email = document.getElementById('formBasicEmail').value;\n    let password = document.getElementById('formBasicPassword').value;\n    socket.emit(\"FormSubmitted\", {workspace: this.state.workspace, group: this.state.group, email: email, password: password});\n  }\n\n  sendWorkspace = (event) =>{\n    event.preventDefault();\n\n    let workspace = document.getElementById('formBasicWorkspaceName').value;\n    socket.emit(\"workspaceSubmitted\", {workspace: workspace});\n    console.log(\"IN THE sendWorkspace function!\");\n  \n    //assuming that the validation function actually works...\n    socket.on('workspaceValidation', (data) => {\n      if(data.valid == true){\n        this.setState({workspace: workspace, valid: true, step: \"LoginAs\"});\n      } else{\n        this.setState({valid: false});\n      }\n    });\n  }\n\n  errorMessage = () => {\n    console.log(\"IN ERROR MESSAGE : \" + this.state.valid);\n\n    if(this.state.valid != false){\n      return null;\n    }\n    return (<p><i><font color=\"#CD5C5C\">That workspace doesn't exist!</font></i></p>);\n  }\n\n  setGroupStaff = () => {\n    this.setState({group: \"Staff\", step: \"Staff\"});\n  }\n\n  setGroupStudents = () => {\n    this.setState({group: \"Students\", step: \"Students\"});\n  }\n\n  setGroupPartners = () => {\n    this.setState({group: \"Partners\", step: \"Partners\"});\n  }\n\n\n  render() {\n      if(this.state.step==null){\n        return(\n            <div className=\"center-me\">\n            <Column horizontal='center' flexGrow={1}>\n\n\n              <Row horizontal='center'>\n                  <h2>Login to your workspace</h2>\n              </Row>\n\n              <Row horizontal='center'>\n                <Form onSubmit = {this.sendWorkspace}>\n                  <Form.Group controlId=\"formBasicWorkspaceName\">\n                    <Form.Label>Workspace name</Form.Label>\n                    <Form.Control required type=\"text\" placeholder=\"Enter workspace name\" />\n                  </Form.Group>\n                  \n                  {this.errorMessage()}\n\n                  <Row horizontal='center'>\n                    <Button variant=\"primary\" type=\"submit\">Go!</Button>\n                  </Row>\n\n                  <Row horizontal = 'center'>\n                    <GoogleLogin\n                      clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n                      buttonText=\"Login with Google\"\n                      onSuccess={this.responseGoogleSucceed}\n                      onFailure={this.responseGoogleFail}\n                      cookiePolicy={'single_host_origin'}\n                    />\n                  </Row>\n\n                </Form>\n              </Row>\n\n            </Column>\n\n          </div>\n        )\n      } else if(this.state.step == \"LoginAs\") {\n          return (\n            <div className='center-me'>\n\n              <Column flexGrow={1}>\n                <Row horizontal='center'>\n                  <h1> Which are you logging in as? </h1>\n                </Row>\n\n                <Row horizontal='center'>\n                  <Button onClick={this.setGroupStaff}>Staff</Button>\n                </Row>\n\n                <Row horizontal='center'>\n                  <Button onClick={this.setGroupPartners}>Partner</Button>\n                </Row>\n\n                <Row horizontal='center'>\n                  <Button onClick={this.setGroupStudents}>Student</Button>\n                </Row>\n\n              </Column>\n\n            </div>\n          );\n      } else{\n        return (\n          <div className='center-me'>\n\n            <Column horizontal='center' flexGrow={1}>\n\n\n              <Row horizontal='center'>\n                  <h1>{this.state.group}</h1>\n              </Row>\n\n              <Row horizontal='center'>\n                <Form onSubmit = {this.sendLogin}>\n                  <Form.Group controlId=\"formEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control required type=\"email\" placeholder=\"Enter email\" />\n                  </Form.Group>\n\n                  <Form.Group controlId=\"formPassword\">\n                    <Form.Label>Password</Form.Label>\n                    <Form.Control required type=\"password\" placeholder=\"Enter password\" />\n                  </Form.Group>\n                  \n                  <Row horizontal='center'>\n                    <Button variant=\"primary\" type=\"submit\">Login!</Button>\n                  </Row>\n\n                  <GoogleLogin\n                    clientId=\"273539098251-5nhctai82l0ram9s38gkp7s22ahc4lui.apps.googleusercontent.com\"\n                    buttonText=\"Login with Google\"\n                    onSuccess={this.responseGoogleSucceed}\n                    onFailure={this.responseGoogleFail}\n                    cookiePolicy={'single_host_origin'}\n                  />\n\n\n                </Form>\n              </Row>\n\n            </Column>\n          </div>\n        );\n      }\n    }\n\n}\n\n\nexport default Login;\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}