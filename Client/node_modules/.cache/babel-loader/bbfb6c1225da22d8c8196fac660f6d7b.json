{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/pages/staff/subpages/ConfigureScreening.js\";\nimport React, { Component } from 'react';\nimport socket from '../../../components/SocketUser';\nimport Table from '../../../components/Table';\nimport { Button, Form, Col, FormGroup, Checkbox } from 'react-bootstrap';\n\nclass ConfigureScreening extends Component {\n  constructor(props) {\n    super(props);\n    this._isMounted = false;\n\n    this.addEvents = () => {\n      var coll = document.getElementsByClassName(\"collapsible\");\n      var i;\n\n      for (i = 0; i < coll.length; i++) {\n        coll[i].addEventListener(\"click\", function () {\n          this.classList.toggle(\"active\");\n          var content = this.nextElementSibling;\n\n          if (content.style.display === \"block\") {\n            content.style.display = \"none\";\n          } else {\n            content.style.display = \"block\";\n          }\n        });\n      }\n    };\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n    this.addEvents();\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  changeState(data) {\n    if (this._isMounted) {\n      this.setState(data);\n    }\n  }\n\n  render() {\n    if (this.props.page === 'ConfigureScreening') {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \" inside configure screening \"), React.createElement(Button, {\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Timeline Configurations\"), React.createElement(\"div\", {\n        id: \"demo\",\n        className: \"collapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Lorem ipsum dolor text....\"), React.createElement(Button, {\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Student Sheet Configurations\"), React.createElement(\"div\", {\n        id: \"demo\",\n        className: \"collapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"Lorem ipsum dolor text....\"), React.createElement(Button, {\n        \"data-toggle\": \"collapse\",\n        \"data-target\": \"#demo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Partner Sheet Configurations\"), React.createElement(\"div\", {\n        id: \"demo\",\n        className: \"collapse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, \"Lorem ipsum dolor text....\"));\n    } else {\n      return null;\n    }\n  }\n\n}\n\nexport default ConfigureScreening;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/pages/staff/subpages/ConfigureScreening.js"],"names":["React","Component","socket","Table","Button","Form","Col","FormGroup","Checkbox","ConfigureScreening","constructor","props","_isMounted","addEvents","coll","document","getElementsByClassName","i","length","addEventListener","classList","toggle","content","nextElementSibling","style","display","componentDidMount","componentWillUnmount","changeState","data","setState","render","page"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAOC,KAAP,MAAkB,2BAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,SAA5B,EAAuCC,QAAvC,QAAuD,iBAAvD;;AAGA,MAAMC,kBAAN,SAAiCR,SAAjC,CAA2C;AAEzCS,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AADgB,SAKlBC,UALkB,GAKP,KALO;;AAAA,SAsBlBC,SAtBkB,GAsBN,MAAK;AACf,UAAIC,IAAI,GAAGC,QAAQ,CAACC,sBAAT,CAAgC,aAAhC,CAAX;AACA,UAAIC,CAAJ;;AAEA,WAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGH,IAAI,CAACI,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChCH,QAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQE,gBAAR,CAAyB,OAAzB,EAAkC,YAAW;AAC3C,eAAKC,SAAL,CAAeC,MAAf,CAAsB,QAAtB;AACA,cAAIC,OAAO,GAAG,KAAKC,kBAAnB;;AACA,cAAID,OAAO,CAACE,KAAR,CAAcC,OAAd,KAA0B,OAA9B,EAAuC;AACrCH,YAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB,MAAxB;AACD,WAFD,MAEO;AACLH,YAAAA,OAAO,CAACE,KAAR,CAAcC,OAAd,GAAwB,OAAxB;AACD;AACF,SARD;AASD;AACF,KArCiB;AAGjB;;AAIDC,EAAAA,iBAAiB,GAAE;AAClB,SAAKd,UAAL,GAAgB,IAAhB;AACA,SAAKC,SAAL;AACA;;AAEDc,EAAAA,oBAAoB,GAAE;AACpB,SAAKf,UAAL,GAAgB,KAAhB;AACD;;AAEDgB,EAAAA,WAAW,CAACC,IAAD,EAAM;AACf,QAAG,KAAKjB,UAAR,EAAmB;AACjB,WAAKkB,QAAL,CAAcD,IAAd;AACD;AACF;;AAoBDE,EAAAA,MAAM,GAAG;AACR,QAAG,KAAKpB,KAAL,CAAWqB,IAAX,KAAoB,oBAAvB,EAA4C;AAC1C,aACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCADJ,EAII,oBAAC,MAAD;AAAQ,uBAAY,UAApB;AAA+B,uBAAY,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAJJ,EAMI;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCANJ,EAUI,oBAAC,MAAD;AAAQ,uBAAY,UAApB;AAA+B,uBAAY,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAVJ,EAYI;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAZJ,EAgBI,oBAAC,MAAD;AAAQ,uBAAY,UAApB;AAA+B,uBAAY,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCAhBJ,EAkBI;AAAK,QAAA,EAAE,EAAC,MAAR;AAAe,QAAA,SAAS,EAAC,UAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAlBJ,CADD;AA0BF,KA3BA,MA2BK;AACH,aAAO,IAAP;AACA;AACF;;AAzEwC;;AA8E3C,eAAevB,kBAAf","sourcesContent":["import React, { Component } from 'react'\n\nimport socket from '../../../components/SocketUser';\nimport Table from '../../../components/Table'\nimport { Button, Form, Col, FormGroup, Checkbox } from 'react-bootstrap'\n\n\nclass ConfigureScreening extends Component {\n\n  constructor(props){\n    super(props);\n\n  }\n\n  _isMounted=false;\n  \n  componentDidMount(){\n   this._isMounted=true;\n   this.addEvents();\n  }\n\n  componentWillUnmount(){\n    this._isMounted=false;\n  }\n\n  changeState(data){\n    if(this._isMounted){\n      this.setState(data)\n    }\n  }\n\n  addEvents = () =>{\n    var coll = document.getElementsByClassName(\"collapsible\");\n    var i;\n\n    for (i = 0; i < coll.length; i++) {\n      coll[i].addEventListener(\"click\", function() {\n        this.classList.toggle(\"active\");\n        var content = this.nextElementSibling;\n        if (content.style.display === \"block\") {\n          content.style.display = \"none\";\n        } else {\n          content.style.display = \"block\";\n        }\n      });\n    }\n  }\n\n\n  render() {\n  \tif(this.props.page === 'ConfigureScreening'){\n\t    return (\n\t    \t<div>\n          <h1> inside configure screening </h1>\n\n\n          <Button data-toggle=\"collapse\" data-target=\"#demo\">Timeline Configurations</Button>\n\n          <div id=\"demo\" className=\"collapse\">\n            Lorem ipsum dolor text....\n          </div>\n\n          <Button data-toggle=\"collapse\" data-target=\"#demo\">Student Sheet Configurations</Button>\n\n          <div id=\"demo\" className=\"collapse\">\n            Lorem ipsum dolor text....\n          </div>\n\n          <Button data-toggle=\"collapse\" data-target=\"#demo\">Partner Sheet Configurations</Button>\n\n          <div id=\"demo\" className=\"collapse\">\n            Lorem ipsum dolor text....\n          </div>\n\n\n\t\t    </div>\n\t    )\n\t\t} else{\n    \treturn null;\n    }\n  }\n\n}\n\n\nexport default ConfigureScreening;\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}