{"ast":null,"code":"var _jsxFileName = \"/Users/howe/Desktop/webapp/Client/src/App.js\";\nimport React, { Component } from 'react';\nimport LoginLanding from './pages/landing/LoginLanding';\nimport PartnersLanding from './pages/partners/PartnersLanding';\nimport StaffLanding from './pages/staff/StaffLanding';\nimport StudentsLanding from './pages/students/StudentsLanding';\nimport socket from './components/SocketUser';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.setData = d => {\n      this.setState({\n        data: d\n      });\n    };\n\n    this.setGroupApp = g => {\n      this.setState({\n        group: g\n      });\n    };\n\n    this.onLogIn = (group, urlList, data) => {\n      //urlList and data currently not set\n      let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n      this.setState({\n        logsign: \"Normal\"\n      });\n      this.setState({\n        url: urlStuff\n      }); // HOWE\n\n      this.setState({\n        loggedIn: true\n      });\n      this.setState({\n        group: group\n      });\n      this.setState({\n        data: data\n      }); //HOWE\n    };\n\n    this.onSignIn = googleUser => {\n      //should I be configuring a \"group?\"\n      this.setState({\n        logsign: \"Google\"\n      }); //!!!!!TODO: need to make a function to get the url stuff, input from staff\n\n      let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n      this.setState({\n        url: urlStuff\n      });\n      console.log(\"SignedIn\");\n      this.setState({\n        loggedIn: true\n      });\n      console.log(\"signed in! \" + this.state.loggedIn);\n      console.log(\"URL: \" + this.state.url); //!!!!!TODO: some function to tell you what group the person belongs in\n\n      this.setState({\n        group: \"Staff\"\n      });\n      console.log(\"new group is: \" + this.state.group);\n      console.log(\"signed in! \" + this.state.loggedIn);\n      this.setState({\n        profile: googleUser.getBasicProfile()\n      });\n      console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n\n      console.log('Name: ' + this.state.profile.getName());\n      console.log('Given Name: ' + this.state.profile.getGivenName());\n      console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n      console.log(\"Entered console.... \" + this.state.loggedIn); //HOWE: this should actually be the authentication stuff\n      //login emission here... this is BEFORE any authentication\n\n      socket.emit(\"gLoginSubmitted\", {\n        email: this.state.profile.getEmail()\n      });\n      socket.on(\"sendingattempt\", data => {\n        console.log(\"IN SENDING ATTEMPT\");\n        console.log(data);\n        this.setState({\n          data: data[\"attempt\"]\n        });\n        console.log(\"From within the set state.... \" + JSON.stringify(this.state.data));\n      }); //function to get the corresponding row entry from the appropriate sheet\n    };\n\n    this.gSignOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        logsign: null,\n        loggedIn: false,\n        group: null,\n        url: null\n      });\n      var auth2 = window.gapi.auth2.getAuthInstance();\n      auth2.signOut().then(function () {\n        console.log('User signed out.');\n      });\n      socket.emit('loggedout', {});\n    };\n\n    this.nLogOut = () => {\n      console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n      this.setState({\n        logsign: null,\n        loggedIn: false,\n        group: null,\n        url: null\n      });\n      socket.emit('loggedout', {});\n    };\n\n    this.onSignOut = () => {\n      if (this.state.logsign == \"Normal\") {\n        return this.nLogOut();\n      } else {\n        return this.gSignOut;\n      }\n    };\n\n    console.log(\"in app constructor\");\n    /* \n    group values: null, Students, Staff, Partners\n    */\n\n    this.state = {\n      logsign: null,\n      url: null,\n      loggedIn: false,\n      group: null,\n      profile: null,\n      data: null\n    };\n    socket.emit('FINALLY', {\n      msg: \"event from App.js\"\n    });\n  }\n\n  /*\n    failsafe way: store the pages as things in divs, and render everything but selectively hide\n  */\n  render() {\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(LoginLanding, {\n      url: [\"Applica\", \"\"],\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onLogIn: this.onLogIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), React.createElement(StaffLanding, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), React.createElement(StudentsLanding, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }), React.createElement(PartnersLanding, {\n      url: this.state.url,\n      group: this.state.group,\n      loggedIn: this.state.loggedIn,\n      onSignIn: this.onSignIn,\n      onSignOut: this.onSignOut,\n      data: this.state.data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/howe/Desktop/webapp/Client/src/App.js"],"names":["React","Component","LoginLanding","PartnersLanding","StaffLanding","StudentsLanding","socket","App","constructor","props","setData","d","setState","data","setGroupApp","g","group","onLogIn","urlList","urlStuff","logsign","url","loggedIn","onSignIn","googleUser","console","log","state","profile","getBasicProfile","getId","getName","getGivenName","getEmail","emit","email","on","JSON","stringify","gSignOut","auth2","window","gapi","getAuthInstance","signOut","then","nLogOut","onSignOut","msg","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport LoginLanding from './pages/landing/LoginLanding'\nimport PartnersLanding from './pages/partners/PartnersLanding'\nimport StaffLanding from './pages/staff/StaffLanding';\nimport StudentsLanding from './pages/students/StudentsLanding';\n\nimport socket from './components/SocketUser';\n\n\nclass App extends Component{\n\n  constructor(props){\n    super(props);\n    console.log(\"in app constructor\");\n\n    /* \n    group values: null, Students, Staff, Partners\n    */\n    this.state = {logsign: null, url: null, loggedIn: false, group: null, profile: null, data: null};\n\n    socket.emit('FINALLY', {msg: \"event from App.js\"});\n  }\n\n  setData = (d) =>{\n    this.setState({data: d});\n  }\n\n  //To delete\n  setGroupApp = (g) =>{\n    this.setState({group: g});\n  }\n\n  onLogIn = (group, urlList, data) => {\n    //urlList and data currently not set\n    let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n    this.setState({logsign: \"Normal\"});\n    this.setState({url: urlStuff}); // HOWE\n    this.setState({loggedIn: true});\n    this.setState({group: group});\n\n\n    this.setState({data: data});//HOWE\n  }\n\n  onSignIn = (googleUser) => {\n    //should I be configuring a \"group?\"\n    this.setState({logsign: \"Google\"});\n\n\n    //!!!!!TODO: need to make a function to get the url stuff, input from staff\n    let urlStuff = [\"UC Berkeley Data Science\", \"https://data.berkeley.edu\"];\n    this.setState({url: urlStuff});\n\n    console.log(\"SignedIn\");\n    this.setState({loggedIn: true});\n    console.log(\"signed in! \" + this.state.loggedIn);\n            console.log(\"URL: \" + this.state.url);\n\n\n    //!!!!!TODO: some function to tell you what group the person belongs in\n    this.setState({group: \"Staff\"})\n    console.log(\"new group is: \" + this.state.group);\n    console.log(\"signed in! \" + this.state.loggedIn);\n\n\n    this.setState({profile: googleUser.getBasicProfile()});\n\n    console.log('ID: ' + this.state.profile.getId()); // Do not send to your backend! Use an ID token instead.\n    console.log('Name: ' + this.state.profile.getName());\n    console.log('Given Name: ' + this.state.profile.getGivenName());\n    console.log('Email: ' + this.state.profile.getEmail()); // This is null if the 'email' scope is not present.\n\n    console.log(\"Entered console.... \"  + this.state.loggedIn);\n\n    //HOWE: this should actually be the authentication stuff\n    //login emission here... this is BEFORE any authentication\n    socket.emit(\"gLoginSubmitted\", {email: this.state.profile.getEmail()});\n\n    socket.on(\"sendingattempt\", (data) =>{\n      console.log(\"IN SENDING ATTEMPT\");\n        console.log(data);\n        this.setState({data: data[\"attempt\"]});\n        console.log(\"From within the set state.... \" + JSON.stringify(this.state.data));\n\n    });\n    //function to get the corresponding row entry from the appropriate sheet\n\n  }\n\n\n  gSignOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({logsign: null, loggedIn: false, group: null, url: null});\n\n    var auth2 = window.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(function () {\n      console.log('User signed out.');\n    });\n\n    socket.emit('loggedout', {});\n  }\n\n  nLogOut = () => {\n    console.log(\"INSIDE THE SIGNOUT FUNCTION\");\n    this.setState({logsign: null, loggedIn: false, group: null, url: null});\n\n    socket.emit('loggedout', {});\n  }\n\n  onSignOut = () =>{\n    if(this.state.logsign == \"Normal\"){\n      return this.nLogOut();\n    } else{\n      return this.gSignOut;\n    }\n  }\n\n\n\n\n/*\n  failsafe way: store the pages as things in divs, and render everything but selectively hide\n*/\n  render(){\n    console.log(\"inside app.js render..... \" + this.state.url);\n    return (\n      <div>\n        <LoginLanding\n          url = {[\"Applica\", \"\"]}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onLogIn = {this.onLogIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut} />\n        <StaffLanding\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n        <StudentsLanding\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n        <PartnersLanding\n          url = {this.state.url}\n          group = {this.state.group}\n          loggedIn = {this.state.loggedIn}\n          onSignIn = {this.onSignIn}\n          onSignOut = {this.onSignOut}\n          data = {this.state.data} />\n      </div>\n    )\n  }\n\n}\n\n\nexport default App;\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}